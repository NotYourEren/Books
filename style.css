@import url("https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css");
@import url("https://fonts.googleapis.com/css2?family=Poppins:wght@100;200;300;400;500;600;700;800&display=swap");

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: "Poppins", sans-serif;
}

body {
  background-image: url("Assests/luffy.jpg");
  background-size: cover;
  min-height: 100vh;
}

ul {
  list-style: none;
}

.accordion-menu {
  max-width: 60vw;
  max-height: auto;
  margin: 100px auto 20px;
  background: #242d410c;
  border-radius: 8px;
  overflow: hidden;
  box-shadow: 0 0 10px #000;
}

.accordion-menu li:last-child .dropdown {
  border-bottom: 0;
}
.accordion-menu li.active .dropdown {
  color: #fff;
}
.accordion-menu li.active .dropdown .fa-chevron-down {
  transform: rotate(180deg);
}
.dropdown {
  cursor: pointer;
  display: block;
  padding: 15px 15px 15px 45px;
  font-size: 18px;
  border-bottom: 2px solid #2d374d00;
  color: #999999;
  position: relative;
  transition: all 0.4s ease-out;
}

.dropdown:hover {
  background: #566f82; /* fallback colour */
  background: -webkit-gradient(
    linear,
    0% 0%,
    0% 100%,
    from(#27455c0c),
    to(#273a4713)
  );
}

.dropdown i {
  position: absolute;
  top: 17px;
  left: 16px;
}

.dropdown .fa-chevron-down {
  right: 12px;
  left: auto;
  transition: transform 0.2s ease-in-out;
}

.submenuItems {
  display: none;
  background: #2d374d0a;
  transition: all 2s ease-in-out;
}

.accordion-menu li.active .submenuItems {
  display: block;
}

.submenuItems a {
  display: block;
  color: #66b2ff;
  font-weight: 600;
  padding: 12px 12px 12px 45px;
  transition: all 0.2s ease-out;
  text-decoration: none;
}

.submenuItems a:hover {
  background-color: #5c7185;
  color: #fff;
}
#footer {
  bottom: 0;
  width: 100%;
  position: absolute;
  display: flex;
  justify-content: center;
  height: 6vh;
  color: azure;
  background-color: rgba(0, 0, 0, 0.01);
  z-index: -2;
}
.footer-block {
  margin: 20px 0;
}


/* scroll bar */
::-webkit-scrollbar-track {
  background-color: #28292b6b;
}
::-webkit-scrollbar {
  width: 10px;
  background: #28292bcc;
}
::-webkit-scrollbar-thumb {
  background: #0c0c0cfd;
  border-radius: 19px;
}


/* temp */
#svg-wrapper{
  position: fixed;
  bottom:10px;
  right:10px;
  width: 53px;
  height: auto;
  svg{
    position:relative;
    padding:0px !important;
    stroke:none;
  }
  &:hover{
      width: 56px;
      transition: width .1s;
      -webkit-transition: width .1s; /* Safari */
  }
}

// Toggle
.toggle-animation{
  width: 100px;
  height: 50px;
  line-height: 50px;
  text-align:center;
  border:solid 1px;
  font-family:helvetica;
}|

/* Preloader */
$count: 10;
$time: 2; //in seconds
$size: 100;
$color: #ffffff;

.holder {
  position: absolute;
  left: 0px;
  top: 0px;
  bottom: 0px;
  right: 0px;
  width: 100%;
  height: 100%;
  background-color: #2D2F48;
}

.preloader {
  /* size */
  width: $size + px;
  height: $size + px;
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translateX(-50%) translateY(-50%);
  animation: rotatePreloader $time + s infinite ease-in;
}
@keyframes rotatePreloader {
  0% {
  transform: translateX(-50%) translateY(-50%) rotateZ(0deg);
  }
  100% {
  transform: translateX(-50%) translateY(-50%) rotateZ(-360deg);
  }
}
.preloader div {
  position: absolute;
  width: 100%;
  height: 100%;
  opacity: 0;
}
.preloader div:before {
  content: "";
  position: absolute;
  left: 50%;
  top: 0%;
  width: 10%;
  height: 10%;
  background-color: $color;
  transform: translateX(-50%);
  border-radius: 50%;
}

@for $i from 1 through $count {
  .preloader div:nth-child(#{$i}) {
    transform: rotateZ(((360 / $count) * ($i - 1)) + deg);
    animation: rotateCircle + $i $time + s infinite linear;
    z-index: $count - $i;
  }
  @keyframes rotateCircle#{$i} {
    #{percentage(((50 / $count) * ($i - 1)) / 100)} {
      opacity: 0;
    }
    #{percentage((((50 / $count) + 0.0001) * ($i - 1)) / 100)} {
      opacity: 1;
      transform: rotateZ((0 - ((360 / $count) * ($i - 2))) + deg);
    }
    #{percentage((((50 / $count) * ($i - 0)) + 2) / 100)} {
      transform: rotateZ((0 - ((360 / $count) * ($i - 1))) + deg);
    }
    #{percentage(((50 + ((50 / $count) * ($i - 0))) + 2) / 100)} {
      transform: rotateZ((0 - ((360 / $count) * ($i - 1))) + deg);
    }
    100% {
      transform: rotateZ((0 - ((360 / $count) * ($count - 1))) + deg);
      opacity: 1;
    }
  }
}